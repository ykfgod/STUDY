package ZaurStart.Lesson2;

public class TypesData_in_Java {
    public static void main(String[] args) {
        /*
             В Java есть два типа данных
             Простые(primitive) и ссылочные(reference)
             Тут описаны простые типы доступные в Java
         */

        // Численные (numeric) 6 штук

            // Целые типы, хронят целые числа 4 штуки

        byte b1 = 10; // 8 бит и имеет значения [-128;127] включительно и все пследующие тоже

        short s1 = 32767; // 16 бит и имеет значения [-32768;32767]

        int i1 = -2147483648; // 32 бит и имеет значения [-2147483648;2147483647]

        long l1 = 1000000000; // 64 бит и имеет значения [-дофига;доифга)]
                // Чтобы использовать всю вместимость long на конце числа
                // нужно написать l а лучше L
        long l2= 10000000003l; // 64 бит и имеет значения [-дофига;доифга)]
        System.out.println(l2);
        long l3 = 10000000000000L; // 64 бит и имеет значения [-дофига;доифга)]

            // Дробные типы, хронят дробные числа 2 штуки
                // Так как Java по дефолту ставит дробным значениям тип double
                // нужно писать у float на конце f или F
        float f1 = 3.56F; // 32 бит и имеет значения [-меньше чем у double;меньше чем у double]
                // Тип int поглащает float, и ставится по дефолту, поэтому если число целое
                // можно не писать F
        float f2 = 20;
                // Тут уже можно не указывать букву D
        double d1 = 3.56; // 64 бит и имеет значения [-дофига;дофига]

        // Символьные (character) 1 штука
                // Всегда пишится в '' и только 1 символ
        char c1 = 'C'; //16 бит и имеет значения [0;65535]
        char c2 = ' ';
        char c3 = '9';

                // Пример вывода с помощью числа (индекса символа в UNICODE) в 10 системе счисления
        char c4 = 300;
        System.out.println(c4);

                // Пример вывода с помощью числа (индекса символа в UNICODE) в 16 системе счисления
                // используется 4 цифры или буквы // 16 система использует {0-F} символы для записи
        char c5 = '\u3456';
        System.out.println(c5);
        char c6 = '\u34DC';
        System.out.println(c6);

        // Логические (boolean) 1 штука

        boolean b = true; // по памяти строго не определен и зависит от разрядности системы
                          // [true;false]
        boolean b2 = false;

        System.out.println(b1);
        System.out.println(b2);

        // и того всего 8 типов

        /*
            Можно присваивать числа в разных системах счисления, примеры в
            двоичной, десятеричной, восьмеричной и 16-ричной одинаковых чисел 60
         */

        int ex1 = 60;  // 10-ричная
        int ex2 = 0B111100;  // 2-чная 0B для объявления
        int ex3 = 074;  // 8-ричная 0 для объявления
        int ex4 = 0X3C;  // 16-ричная 0X для объявления

        // все числа равны в разных системах счисления
        System.out.println(ex1);
        System.out.println(ex2);
        System.out.println(ex3);
        System.out.println(ex4);

        // После Java 7 добавили возможность использовать underscore "_" который не компелируется
        // для удобства разделения в числах за подробной инфой в инет пример

        int ex5 = 1_000_000; //удобно для глаз
        System.out.println(ex5);

    }
}
